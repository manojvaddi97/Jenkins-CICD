pipeline {
    agent { 
        docker {
            image 'manojvaddi497/dock_images:maven-docker-git-agent'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
            }
      }
    stages {
        stage('Build') {
            steps {
                sh 'whoami'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn test'
            }
        }
        stage('Static Code Analysis') {
          environment {
            SONAR_URL = "http://35.182.246.116:9000"
          }
            steps {
              withCredentials([string(credentialsId: 'sonarqube-api', variable: 'SONAR_AUTH_TOKEN')]) {
                sh 'whoami'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
              }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
            DOCKER_IMAGE = "manojvaddi497/dock_images:${BUILD_NUMBER}"
            // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
            REGISTRY_CREDENTIALS = credentials('docker-cred')
          }
            steps {
              script {
                sh 'whoami'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && pwd && docker build -t ${DOCKER_IMAGE} .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                    dockerImage.push()
            }
        }
      }
    }

        stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-CICD"
            GIT_USER_NAME = "manojvaddi97"
            // GIT_DIRECTORY = "/var/lib/jenkins/workspace/ultimate_CICD"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
              //dir(GIT_DIRECTORY) { // Change the working directory to the Git repository directory
                sh '''
                    pwd
                    git config user.email "manojvaddi497@gmail.com"
                    git config user.name "Manoj Vaddi"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
     }
   }
 }
//}

